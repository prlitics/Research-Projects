cols<-yaml["column_classes"][[1]]
col_names<-names(cols)
x<-""
z<-0
for (i in cols) {
z<- z + 1
if(z==1){
x<-(paste0('list(',shQuote(col_names[z])," = col_",i[[1]],'(), '))
}else if (z < length(cols)){
x<-paste0(x,shQuote(col_names[z])," = col_",i[[1]],'(), ')}
else{
x <-paste0(x,shQuote(col_names[z])," = col_",i[[1]],'() ',')')
}
}
# Gather Delimiter
delim <- yaml[["delimiter"]]
y<-parse_expr(x)
print(y)
#Load it in (need to complicate it from here, but it'll be fine for )
readr::read_delim(file = vtr_file, delim = delim, col_names = T, col_types = eval(y))
}
ak<-vrrr_read(state = "ak", vtr_file = "C:/Users/prlic/Downloads/VOTERS List Report 9.25.19.csv")
load_state<-function(state, vtr_file, state_yaml){
yaml <- state_yaml
# Gather Column Types
cols<-yaml["column_classes"][[1]]
col_names<-names(cols)
x<-""
z<-0
for (i in cols) {
z<- z + 1
if(z==1){
x<-(paste0('list(',shQuote(col_names[z])," = col_",i[[1]],'(), '))
}else if (z < length(cols)){
x<-paste0(x,shQuote(col_names[z])," = col_",i[[1]],'(), ')}
else{
x <-paste0(x,shQuote(col_names[z])," = col_",i[[1]],'() ',')')
}
}
# Gather Delimiter
delim <- yaml[["delimiter"]]
y<-parse_expr(x)
print(names(y))
#Load it in (need to complicate it from here, but it'll be fine for )
#readr::read_delim(file = vtr_file, delim = delim, col_names = T, col_types = eval(y))
}
vrrr_read(state = "ak", vtr_file = "C:/Users/prlic/Downloads/VOTERS List Report 9.25.19.csv")
load_state<-function(state, vtr_file, state_yaml){
yaml <- state_yaml
# Gather Column Types
cols<-yaml["column_classes"][[1]]
col_names<-names(cols)
x<-""
z<-0
for (i in cols) {
z<- z + 1
if(z==1){
x<-(paste0('list(',shQuote(col_names[z])," = col_",i[[1]],'(), '))
}else if (z < length(cols)){
x<-paste0(x,shQuote(col_names[z])," = col_",i[[1]],'(), ')}
else{
x <-paste0(x,shQuote(col_names[z])," = col_",i[[1]],'() ',')')
}
}
# Gather Delimiter
delim <- yaml[["delimiter"]]
y<-parse_expr(x)
print(names(y))
#Load it in (need to complicate it from here, but it'll be fine for )
readr::read_delim(file = vtr_file, delim = delim, col_names = T, col_types = eval(y))
}
vrrr_read(state = "ak", vtr_file = "C:/Users/prlic/Downloads/VOTERS List Report 9.25.19.csv")
ak<-vrrr_read(state = "ak", vtr_file = "C:/Users/prlic/Downloads/VOTERS List Report 9.25.19.csv")
ak<-vrrr_read(state = "ak", vtr_file = "C:/Users/prlic/Downloads/VOTERS List Report 9.25.19.csv")
View(ak)
install.packages("learnr")
knitr::knit_engines$get()
library(learnr)
knitr::opts_chunk$set(echo = FALSE)
rmarkdown::render("D:/Creative Projects/Blog/public/post/2015-07-23-r-rmarkdown")
blogdown:::insert_image_addin()
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics('C:/Users/prlic/Dropbox/Behavior/Challenges/pikameme.png')
divisible_by_13 <- function(x){
if(x%%13 == 0){
print("Don't show this number to someone suffering from triskaidekaphobia")
} else {
print("Jason Vorhees is sad.")
}
}
divisible_by_13(x)
divisible_by_13(169)
divisible_by_13(169)
divisible_by_13(666)
install.packages("tufte")
install.packages("tufte")
install.packages("emo")
devtools::install_github("hadley/emo")
devtools::install_github("hadley/emo")
devtools::install_github("hadley/emo")
install.packages("rlang")
install.packages("rlang")
devtools::install_github("hadley/emo")
devtools::install_github("hadley/emo", INSTALL_opts="--no-multiarch")
install.packages("pkgbuild")
library(pkgbuild)
devtools::install_github("hadley/emo", INSTALL_opts="--no-multiarch")
library(devtools)
devtools::install_github("hadley/emo", INSTALL_opts="--no-multiarch")
install.packages("devtools")
install.packages("rlang")
library(rlang)
R.Version()
sessionInfo()
remotes::install_github("r-lib/rlang")
install.packages("rlang")
library(rlang)
devtools::install_github("hadley/emo", INSTALL_opts="--no-multiarch")
rmarkdown::pandoc_version()
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("tufte")
devtools::install_github("hadley/emo")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("hadley/emo")
devtools::install_github("hadley/emo")
install.packages("rlang")
install.packages("rlang")
devtools::install_github("hadley/emo")
install.packages("tidyverse")
install.packages("extrafont")
install.packages("ggthemes")
install.packages("swirl")
knitr::opts_chunk$set(echo = TRUE)
View(nycflights)
library(nycflights)
library(tidyverse)
View(nycflights)
library(tidyverse)
View(flights)
library(tidyverse)
View(mtcars)
library(tidyverse)
kable(head(mtcars))
install.packages("kable")
library(knitr)
kable(head(mtcars))
install.packages("blogdown")
knitr::opts_chunk$set(echo = TRUE)
divisible_by_13 <- function(x){
if(x%%13 == 0){
print("Don't show this number to someone suffering from triskaidekaphobia")
} else if (typeof(x) != "numeric"){
stop("Stop clowning. Put in a number")
} else {
print("Jason Vorhees is sad.")
}
}
divisible_by_13(169)
divisible_by_13(666)
divisible_by_13 <- function(x){
if(x%%13 == 0){
print("Don't show this number to someone suffering from triskaidekaphobia")
} else if (typeof(x) != "numeric" or typeof(x) != "double"){
divisible_by_13 <- function(x){
if(x%%13 == 0){
print("Don't show this number to someone suffering from triskaidekaphobia")
} else if (typeof(x) != "numeric" | typeof(x) != "double"){
stop("Stop clowning. Put in a number")
} else {
print("Jason Vorhees is sad.")
}
}
divisible_by_13(169)
divisible_by_13(666)
divisible_by_13(169)
divisible_by_13(666)
divisible_by_13(169)
divisible_by_13("hi")
divisible_by_13 <- function(x){
if(x%%13 == 0){
print("Don't show this number to someone suffering from triskaidekaphobia")
} else {
print("Jason Vorhees is sad.")
}
}
divisible_by_13(169)
divisible_by_13("hi")
library(ggplot2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
install.packages("flexdashboard")
install.packages("flexdashboard")
install.packages("flexdashboard")
sPoNgEbObMeMeFoNt<-function(x){
x<-tolower(x)
x1<-strsplit(x,"")[[1]]
j<-1
for(i in 1:length(x1)){
if(grepl("^[A-Za-z]+$",x1[i])){
j<-j+1
if(j %% 2 == 1){
x1[i]<-toupper(x1[i])
}else{
x1[i]<-x1[i]
}
}else{
next
}
x<-paste(x1,collapse = "")
}
x
}
test<-"The quick brown fox! Jumped over. The lazy. Dog."
sPoNgEbObMeMeFoNt(test)
install.packages("yaml")
install.packages("yaml")
install.packages("readstata13")
library(readstata13)
library(tidyverse)
setwd("D:/GitHub/Research-Projects/FLCovid_2020/")
read.dta13("data/BEBR_final.dta")
data_raw <- read.dta13("data/BEBR_final.dta")
View(data_raw)
to_na <- function(x){
ifelse(x <0, NA, x )
}
data_cleaned < -data_raw %>%
mutate(across(.cols = everything()), to_na())
data_cleaned <- data_raw %>%
mutate(across(.cols = everything()), to_na())
data_cleaned <- data_raw %>%
mutate(across(.cols = everything()), to_na)
data_cleaned <- data_raw %>%
mutate(across(.cols = everything(), to_na))
View(data_cleaned)
View(data_raw)
View(data_cleaned)
#0/1 dummies.
make_dum <- function(x){
ifelse(x == 2, 0 , x)
}
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum(), na.rm = T)
)
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum, na.rm = T))
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum))
View(data_cleaned)
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum),
#Racial Dummies (Other and mixed together; intended reference category)
white = ifelse(RACE==1,1,0),
black = ifelse(RACE==2,1,0),
asian = ifelse(RACE==3,1,0),
native = ifelse(RACE==4,1,0),
other = ifelse(RACE>4,1,0)
)
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum),
#Racial Dummies (Other and mixed together; intended reference category)
white = ifelse(data_raw$RACE==1,1,0),
black = ifelse(data_raw$RACE==2,1,0),
asian = ifelse(data_raw$RACE==3,1,0),
native = ifelse(data_raw$RACE==4,1,0),
other = ifelse(data_raw$RACE>4,1,0))
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum),
#Racial Dummies (Other and mixed together; intended reference category)
white = ifelse(data_raw$RACE==1,1,0),
black = ifelse(data_raw$RACE==2,1,0),
asian = ifelse(data_raw$RACE==3,1,0),
native = ifelse(data_raw$RACE==4,1,0))
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum),
#Racial Dummies (Other and mixed together; intended reference category)
white = ifelse(data_raw$RACE==1,1,0))
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum),
#Racial Dummies (Other and mixed together; intended reference category)
white = ifelse(data_raw$RRACE==1,1,0),
black = ifelse(data_raw$RRACE==2,1,0),
asian = ifelse(data_raw$RRACE==3,1,0),
native = ifelse(data_raw$RRACE==4,1,0),
other = ifelse(data_raw$RRACE>4,1,0))
View(data_cleaned)
sum(data_cleaned$black)
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum),
#Racial Dummies (Other and mixed together; intended reference category)
white = ifelse(data_raw$RRACE==1,1,0),
black = ifelse(data_raw$RRACE==2,1,0),
asian = ifelse(data_raw$RRACE==3,1,0),
native = ifelse(data_raw$RRACE==4,1,0),
other = ifelse(data_raw$RRACE>4,1,0)) %>%
rename(test = MCDC1)
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum),
#Racial Dummies (Other and mixed together; intended reference category)
white = ifelse(data_raw$RRACE==1,1,0),
black = ifelse(data_raw$RRACE==2,1,0),
asian = ifelse(data_raw$RRACE==3,1,0),
native = ifelse(data_raw$RRACE==4,1,0),
other = ifelse(data_raw$RRACE>4,1,0)) %>%
rename(test = MCD1)
data_cleaned <- data_raw %>%
#Sets all values less than zero to NA
mutate(across(.cols = everything(), to_na),
#Dummies Sex(1=Male), Voter(1=Registered), and Hispanic(1=Hispanic)
across(.cols = c(ISEX, VOTER, HISPAN), make_dum),
#Racial Dummies (Other and mixed together; intended reference category)
white = ifelse(data_raw$RRACE==1,1,0),
black = ifelse(data_raw$RRACE==2,1,0),
asian = ifelse(data_raw$RRACE==3,1,0),
native = ifelse(data_raw$RRACE==4,1,0),
other = ifelse(data_raw$RRACE>4,1,0)) %>%
#Renaming our variables
rename(HealthAnxious = MCD1,
FinanceAnxious = MCD2,
UnderControl = MCD3,
RaceImport = MCD4)
p1<-ggplot()+geom_bar(data = data_cleaned, aes(x=UnderControl))
p1
(p1<-ggplot()+geom_bar(data = data_cleaned, aes(x=UnderControl))+
scale_x_discrete(labels=c("1"="Getting the virus under control is essential/nbefore we open up the economy")))
(p1<-ggplot()+geom_bar(data = data_cleaned, aes(x=UnderControl))+
scale_x_discrete(labels=c(1="Getting the virus under control is essential/nbefore we open up the economy")))
(p1<-ggplot()+geom_bar(data = data_cleaned, aes(x=as.factor(UnderControl)))+
scale_x_discrete(labels=c("1" ="Getting the virus under control is essential/nbefore we open up the economy")))
(p1<-ggplot()+geom_bar(data = data_cleaned, aes(x=as.factor(UnderControl)))+
scale_x_discrete(labels=c("1" ="Getting the virus under control is essential\nbefore we open up the economy")))
(p1<-ggplot()+geom_bar(data = data_cleaned, aes(x=as.factor(UnderControl)))+
scale_x_discrete(labels=c("1" ="Getting the virus\nunder control is essential\nbefore we open up the economy")))
(p1<-ggplot()+geom_bar(data = data_cleaned, aes(x=as.factor(UnderControl)))+
scale_x_discrete(labels=c("1" ="Getting the virus\nunder control is\n essential before we \nopen up the economy")))
(p1<-ggplot()+geom_bar(data = data_cleaned, aes(x=as.factor(UnderControl)))+
scale_x_discrete(labels=c("1" ="Getting the virus\nunder control is\n essential before\nwe open up\nthe economy")))
whatdo<-c("1" ="Getting the virus\nunder control is\n essential before\nwe open up\nthe economy",
"2" = "We should open\nthe economy so that\n people can get\nback to their\n jobs and\nnormal lives")
(p1<-ggplot()+geom_bar(data = data_cleaned, aes(x=as.factor(UnderControl, exclude=NA)))+
scale_x_discrete(labels=whatdo))
(p1<-ggplot()+geom_bar(data = data_cleaned[!is.na(data_cleaned)], aes(x=as.factor(UnderControl, exclude=NA)))+
scale_x_discrete(labels=whatdo))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+
scale_x_discrete(labels=whatdo))
whatdo<-c("1" ="Getting the virus\nunder control is\n essential before\nwe open up\nthe economy",
"2" = "We should open\nthe economy so that\n people can get\nback to their\n jobs and\nnormal lives",
"3" = "Both/somewhere\nin between [Volunteered]")
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+
scale_x_discrete(labels=whatdo))
whatdo<-c("1" ="Getting the virus\nunder control is\n essential before\nwe open up\nthe economy",
"2" = "We should open\nthe economy so that\n people can get\nback to their\n jobs and\nnormal lives",
"3" = "Both/somewhere\nin between \n[Volunteered]")
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+
scale_x_discrete(labels=whatdo))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy"))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy"))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy"))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
theme(axis.title.y = element_text(vjust = 1, angle = 90)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
theme(axis.title.y = element_text(hjust = 1, angle = 90)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
theme(axis.title.y = element_text(hjust = 1, angle = 180)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
theme(axis.title.y = element_text(hjust = 1, angle = 0)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
labs(y = "# of Respondents")+
theme(axis.title.y = element_text(hjust = 1, angle = 0)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
labs(y = "# of Respondents")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
labs(y = "# of/nRespondents")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
labs(y = "# of\nRespondents")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
labs(y = "# of\nResps")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
labs(y = "Number of\nResps")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
labs(y = "Number of\nRespondents")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)))+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
labs(y = "Number of\nRespondents")+
theme(axis.title.y = element_text(hjust = 1.1, angle = 0, size = 8)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)), fill = "#84CEFF" )+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "Prioritize Virus vs. Economy")+
labs(y = "Number of\nRespondents")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)), fill = "#84CEFF" )+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "")+
labs(y = "Number of\nRespondents", title = " Floridians Thoughts on Whether to Prioritize Virus vs. Economy")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)), fill = "#84CEFF" )+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "")+
labs(y = "Number of\nRespondents", title = " Floridians Thoughts on Whether\n to Prioritize Virus vs. Economy")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8)))
scale_x_discrete(labels = whatdo, name = "")+
labs(y = "Number of\nRespondents", title = " Floridians Thoughts on Whether\n to Prioritize Virus vs. Economy")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8),
title = element_text(hjust = .5)))
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)), fill = "#84CEFF" )+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "")+
labs(y = "Number of\nRespondents", title = " Floridians Thoughts on Whether\n to Prioritize Virus vs. Economy")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8),
title = element_text(hjust = .5)) )
(p1<-ggplot()+geom_bar(data = filter(data_cleaned, !is.na(UnderControl)),
aes(x=as.factor(UnderControl)), fill = "#84CEFF" )+theme_minimal()+
scale_x_discrete(labels = whatdo, name = "")+
labs(y = "Number of\nRespondents",
title = " Floridians Thoughts on Whether\nto Prioritize Virus vs. Economy")+
theme(axis.title.y = element_text(hjust = 1, angle = 0, size = 8),
title = element_text(hjust = .5)) )
install.packages("nnet")
library(nnet)
data_cleaned$UnderControl<-relevel(data_cleaned$UnderControl,ref = "3")
data_pruned <- data_cleaned[!is.na(data_cleaned$UnderControl)]
data_pruned <- data_cleaned[,!is.na(data_cleaned$UnderControl)]
data_pruned <- data_cleaned[!is.na(data_cleaned$UnderControl),]
View(data_pruned)
data_pruned$UnderControl<-as.factor(data_pruned$UnderControl)
data_pruned$UnderControl<-relevel(data_pruned$UnderControl,ref = "3")
model1<- multinom(UnderControl ~ AGE + PID2 + white + black + asian ,data = data_pruned)
summary(model1)
z <- summary(model1)$coefficients / summary(model1)$standard.errors
summary(model1)
z
model1<- multinom(UnderControl ~ FinanceAnxious + HealthAnxious + AGE +
PID2 + white + black + asian ,data = data_pruned)
z <- summary(model1)$coefficients / summary(model1)$standard.errors
summary(model1)
z
model1<- multinom(UnderControl ~ FinanceAnxious + HealthAnxious +
INCOM2 + EDUCAT + AGE +
PID2 + white + black + asian ,data = data_pruned)
z <- summary(model1)$coefficients / summary(model1)$standard.errors
summary(model1)
z
